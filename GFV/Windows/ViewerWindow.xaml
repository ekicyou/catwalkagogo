<!-- $Id$ -->
<Window x:Class="GFV.Windows.ViewerWindow" x:Name="this"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
	xmlns:gfv="clr-namespace:GFV"
	xmlns:win="clr-namespace:GFV.Windows"
	xmlns:prop="clr-namespace:GFV.Properties"
	xmlns:vm="clr-namespace:GFV.ViewModel"
	xmlns:gfl="clr-namespace:GflNet;assembly=GflNet"
	xmlns:gfvctl="clr-namespace:GFV.Windows.Controls"
	SnapsToDevicePixels="True"
	Title="{Binding Title}"
	Icon="{Binding Icon, Converter={StaticResource BitmapSourceOrIconConverter}}"
	SizeChanged="Window_SizeChanged"
	DataContextChanged="Window_DataContextChanged"
	FocusManager.FocusedElement="{Binding ElementName=_Viewer}"
	AllowDrop="True">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/GFV;component/Windows/ViewerWindow.Chrome.xaml" />
				<ResourceDictionary Source="/GFV;component/Windows/ViewerWindow.AppMenu.xaml" />
				<ResourceDictionary Source="/GFV;component/Windows/ViewerWindow.MainMenu.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>
		
		<!-- Menubar -->
		<Grid Grid.Row="0" IsVisibleChanged="Menubar_VisibilityChanged">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Source={x:Static prop:Settings.Default}, Path=IsShowMenubar}" Value="true">
							<Setter Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Source={x:Static prop:Settings.Default}, Path=IsShowMenubar}" Value="false">
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Source={x:Static shell:SystemParameters2.Current}, Path=IsGlassEnabled}" Value="false">
							<Setter Property="Visibility" Value="Visible" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
			<Menu Grid.Column="0" x:Name="_MainMenu" ItemsSource="{StaticResource MainMenu}"></Menu>
			<Grid Grid.Column="2">
				<ProgressBar Width="100" Value="{Binding ProgressManager.TotalProgress, Mode=OneWay}" Maximum="1"
					IsIndeterminate="{Binding ProgressManager.TotalProgress, Mode=OneWay, Converter={StaticResource IsNaNConverter}}">
				</ProgressBar>
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
					<TextBlock Text="{Binding ProgressManager.TotalProgress, Converter={StaticResource DoubleToPercentageConverter}}" />
				</StackPanel>
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="true">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="false">
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
			</Grid>
		</Grid>
		
		<!-- Viewer -->
		<win:Viewer Grid.Row ="1" x:Name="_Viewer" DataContext="{Binding Viewer}">
			<win:Viewer.Style>
				<Style TargetType="{x:Type win:Viewer}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Source={x:Static prop:Settings.Default}, Path=IsGlassBackground}" Value="false">
							<Setter Property="Background">
								<Setter.Value>
									<DrawingBrush Stretch="None" Viewport="0,0,32,32" ViewportUnits="Absolute" TileMode="Tile" AlignmentX="Center" AlignmentY="Center">
										<DrawingBrush.Drawing>
											<DrawingGroup>
												<GeometryDrawing Brush="White">
													<GeometryDrawing.Geometry>
														<RectangleGeometry Rect="0,0,32,32" />
													</GeometryDrawing.Geometry>
												</GeometryDrawing>
												<GeometryDrawing Brush="LightGray">
													<GeometryDrawing.Geometry>
														<RectangleGeometry Rect="0,0,16,16" />
													</GeometryDrawing.Geometry>
												</GeometryDrawing>
												<GeometryDrawing Brush="LightGray">
													<GeometryDrawing.Geometry>
														<RectangleGeometry Rect="16,16,16,16" />
													</GeometryDrawing.Geometry>
												</GeometryDrawing>
											</DrawingGroup>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</Setter.Value>
							</Setter>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</win:Viewer.Style>
		</win:Viewer>
	</Grid>
	
	<!-- Taskbar -->
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo ProgressValue="{Binding ProgressManager.TotalProgress}"></TaskbarItemInfo>
	</Window.TaskbarItemInfo>
	<Window.Style>
		<Style TargetType="{x:Type Window}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="true">
					<Setter Property="TaskbarItemInfo.ProgressState" Value="Normal" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ProgressManager.TotalProgress, Converter={StaticResource IsNaNConverter}}" Value="true">
					<Setter Property="TaskbarItemInfo.ProgressState" Value="Indeterminate" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="false">
					<Setter Property="TaskbarItemInfo.ProgressState" Value="None" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Style>
</Window>