<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
	xmlns:gfv="clr-namespace:GFV"
	xmlns:win="clr-namespace:GFV.Windows"
	xmlns:prop="clr-namespace:GFV.Properties"
	xmlns:vm="clr-namespace:GFV.ViewModel"
	xmlns:gfl="clr-namespace:GflNet;assembly=GflNet"
	xmlns:gfvctl="clr-namespace:GFV.Windows.Controls">
	<!-- Window Chrome -->
	<Style x:Key="Chrome" TargetType="{x:Type win:ViewerWindow}">
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
							GlassFrameThickness="-1"
							ResizeBorderThickness="4"
							CaptionHeight="22"
							CornerRadius="4">
				</shell:WindowChrome>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type win:ViewerWindow}">
					<Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}">
						<Grid.Resources>
							<ResourceDictionary>
								<!-- CaptionMenuStyle -->
								<Style x:Key="CaptionMenuStyle" TargetType="{x:Type Menu}" BasedOn="{StaticResource {x:Type Menu}}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="true">
											<Setter Property="Background">
												<Setter.Value>
													<RadialGradientBrush Center="0.5,0.5" RadiusX="1.0" RadiusY="1.0">
														<RadialGradientBrush.GradientStops>
															<GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" Offset="0" />
															<GradientStop Color="Transparent" Offset="1.0" />
														</RadialGradientBrush.GradientStops>
													</RadialGradientBrush>
												</Setter.Value>
											</Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="false">
											<Setter Property="Background">
												<Setter.Value>
													<RadialGradientBrush Center="0.5,0.5" RadiusX="1.0" RadiusY="1.0">
														<RadialGradientBrush.GradientStops>
															<GradientStop Color="{DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}" Offset="0" />
															<GradientStop Color="Transparent" Offset="1.0" />
														</RadialGradientBrush.GradientStops>
													</RadialGradientBrush>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
								<!-- CaptionPanelStyle -->
								<Style x:Key="CaptionPanelStyle" TargetType="{x:Type Panel}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="true">
											<Setter Property="Background">
												<Setter.Value>
													<RadialGradientBrush Center="0.5,0.5" RadiusX="1.0" RadiusY="1.0">
														<RadialGradientBrush.GradientStops>
															<GradientStop Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" Offset="0" />
															<GradientStop Color="Transparent" Offset="1.0" />
														</RadialGradientBrush.GradientStops>
													</RadialGradientBrush>
												</Setter.Value>
											</Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="false">
											<Setter Property="Background">
												<Setter.Value>
													<RadialGradientBrush Center="0.5,0.5" RadiusX="1.0" RadiusY="1.0">
														<RadialGradientBrush.GradientStops>
															<GradientStop Color="{DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}" Offset="0" />
															<GradientStop Color="Transparent" Offset="1.0" />
														</RadialGradientBrush.GradientStops>
													</RadialGradientBrush>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
								<!-- CaptionTextBlockStyle -->
								<Style x:Key="CaptionTextBlockStyle" TargetType="{x:Type TextBlock}">
									<Setter Property="FontSize" Value="12" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="true">
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="false">
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
								<Style x:Key="CaptionTextBlockBackStyle" TargetType="{x:Type TextBlock}">
									<Setter Property="FontSize" Value="12" />
									<Setter Property="Effect">
										<Setter.Value>
											<BlurEffect Radius="8" />
										</Setter.Value>
									</Setter>
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="true">
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="false">
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ResourceDictionary>
						</Grid.Resources>

						<Grid.RowDefinitions>
							<RowDefinition Height="24" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!-- This is the ContentPresenter that displays the window content. -->
						<ContentPresenter Grid.Row="1" Margin="1,0,1,1" Content="{TemplateBinding Content}"/>
						<!-- Window Border Content -->
						<!-- System Button -->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="120" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto" />
									<ColumnDefinition Width="auto" />
									<ColumnDefinition Width="auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<!-- AppMenu -->
								<Menu
									VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource CaptionMenuStyle}"
									shell:WindowChrome.IsHitTestVisibleInChrome="True" Margin="4,4,4,0">
									<MenuItem Margin="0" Padding="16,2,16,2" ItemsSource="{DynamicResource AppMenu}">
										<MenuItem.Header>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
															Grid.Column="0" Width="16" Height="16" shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
												<!--<TextBlock Grid.Column="1" VerticalAlignment="Center" TextAlignment="Center" Panel.ZIndex="1"
															Text="{Binding CurrentFilePath, Converter={StaticResource FilePathConverter}, ConverterParameter={x:Static win:FilePathTransform.FileName}, StringFormat=GFV \{0\}"
															FontSize="12" Margin="4,0,4,0" TextTrimming="CharacterEllipsis" Style="{StaticResource CaptionTextBlockStyle}">-->
												<TextBlock Grid.Column="1" VerticalAlignment="Center" TextAlignment="Center" Panel.ZIndex="1"
															Text="GFV" FontSize="12" Margin="4,0,4,0" TextTrimming="CharacterEllipsis" Style="{StaticResource CaptionTextBlockStyle}"
															ToolTip="{TemplateBinding Title}">
												</TextBlock>
												<ProgressBar Grid.Column="1"
															Value="{Binding Path=ProgressManager.TotalProgress, Mode=OneWay}" Maximum="1">
													<ProgressBar.Style>
														<Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
															<Style.Triggers>
																<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="true">
																	<Setter Property="Visibility" Value="Visible" />
																</DataTrigger>
																<DataTrigger Binding="{Binding ProgressManager.IsBusy}" Value="false">
																	<Setter Property="Visibility" Value="Collapsed" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</ProgressBar.Style>
												</ProgressBar>
											</Grid>
										</MenuItem.Header>
										<MenuItem.ItemsPanel>
											<ItemsPanelTemplate>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="auto" />
														<ColumnDefinition Width="auto" />
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
														<RowDefinition Height="auto" />
													</Grid.RowDefinitions>
												</Grid>
											</ItemsPanelTemplate>
										</MenuItem.ItemsPanel>
									</MenuItem>
								</Menu>

								<!-- Scale Menu -->
								<Menu Grid.Column="1"
											VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource CaptionMenuStyle}"
											shell:WindowChrome.IsHitTestVisibleInChrome="True" Margin="4,4,4,0">
									<gfvctl:ScaleMenuItem>
										<gfvctl:ScaleMenuItem.Header>
											<StackPanel Orientation="Horizontal">
												<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{Binding Path=Viewer.CurrentBitmap.Width, Converter={StaticResource RoundNumberConverter}}"/>
												<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text=" x " />
												<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{Binding Path=Viewer.CurrentBitmap.Height, Converter={StaticResource RoundNumberConverter}}"/>
												<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text=" : " />
												<TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{Binding Viewer.Scale, Converter={StaticResource DoubleToPercentageConverter}, StringFormat=\{0\} %}"/>
											</StackPanel>
										</gfvctl:ScaleMenuItem.Header>
									</gfvctl:ScaleMenuItem>
								</Menu>
								<TextBlock Grid.Column="2" Style="{StaticResource CaptionTextBlockBackStyle}" VerticalAlignment="Center"
											Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CurrentFilePath, Converter={StaticResource FilePathConverter}, ConverterParameter={x:Static win:FilePathTransform.FileName}}">
								</TextBlock>
								<TextBlock Grid.Column="2" Style="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Center"
											Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CurrentFilePath, Converter={StaticResource FilePathConverter}, ConverterParameter={x:Static win:FilePathTransform.FileName}}">
								</TextBlock>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>