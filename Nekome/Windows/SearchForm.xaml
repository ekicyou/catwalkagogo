<Window x:Class="Nekome.Windows.SearchForm" x:Name="this"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Nekome.Windows"
	xmlns:nekome="clr-namespace:Nekome"
	xmlns:prop="clr-namespace:Nekome.Properties"
	xmlns:cwwin="clr-namespace:CatWalk.Windows;assembly=CatWalk.Windows"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	Title="{x:Static prop:Resources.SearchForm_Title}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" FontSize="12"
	ResizeMode="NoResize" SizeToContent="WidthAndHeight" ShowInTaskbar="false" WindowStartupLocation="CenterOwner"
	SnapsToDevicePixels="true">
	<Window.Resources>
		<ResourceDictionary>
			<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
				<Setter Property="Validation.ErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<DockPanel LastChildFill="True">
								<Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
									BorderThickness="1" DockPanel.Dock="Bottom">
									<TextBlock Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
								</Border>
								<AdornedElementPlaceholder Name="MyAdorner" />
							</DockPanel>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="cwwin:TextBoxBehaviors.IsSelectAllOnFocus" Value="true" />
			</Style>
			<Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}">
				<Style.Resources> 
					<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/> 
					<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/> 
				</Style.Resources>
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="cwwin:DialogCommands.Cancel" Executed="Cancel_Executed" CanExecute="Cancel_CanExecute" />
		<CommandBinding Command="cwwin:DialogCommands.OK" Executed="OK_Executed" CanExecute="OK_CanExecute" />
	</Window.CommandBindings>
	
	<StackPanel Orientation="Vertical" Width="480" Margin="4">
		<!-- Auto Complete-->
		<Popup Name="completePopup" PopupAnimation="Slide" AllowsTransparency="true" StaysOpen="false">
			<Grid MaxHeight="{Binding ElementName=this, Path=ActualHeight}">
				<ListBox Name="completeListBox" BorderThickness="1"
						BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
						HorizontalContentAlignment="Stretch"
						DisplayMemberPath="Key">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel Orientation="Vertical" />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
				</ListBox>
			</Grid>
		</Popup>

		<!-- Search Word -->
		<GroupBox>
			<GroupBox.Header>
				<Label Target="{Binding ElementName=searchWordBox}">
					<AccessText Text="{x:Static prop:Resources.SearchForm_SearchWord}" />
				</Label>
			</GroupBox.Header>
			<StackPanel Orientation="Vertical">
				<TextBox Name="searchWordBox" Text="{Binding Path=SearchCondition.Pattern, Mode=TwoWay}"/>
				<WrapPanel Orientation="Horizontal">
					<CheckBox Margin="4" Name="isUseRegexBox" IsChecked="{Binding Path=SearchCondition.IsUseRegex, Mode=TwoWay}">
						<AccessText Text="{x:Static prop:Resources.SearchForm_RegularExpression}" />
					</CheckBox>
					<CheckBox Margin="4" Name="isIgnoreCaseBox" IsChecked="{Binding Path=SearchCondition.IsIgnoreCase, Mode=TwoWay}">
						<AccessText Text="{x:Static prop:Resources.SearchForm_IgnoreCase}" />
					</CheckBox>
				</WrapPanel>
			</StackPanel>
		</GroupBox>
		
		<!-- Path -->
		<GroupBox>
			<GroupBox.Header>
				<Label Target="{Binding ElementName=pathBox}">
					<AccessText Text="{x:Static prop:Resources.SearchForm_Directory}" />
				</Label>
			</GroupBox.Header>
			<StackPanel Orientation="Vertical">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>
					<TextBox Grid.Column="0" Name="pathBox" Text="{Binding Path=SearchCondition.Path, Mode=TwoWay}"/>
					<Button Grid.Column="1" Click="OpenPath" IsTabStop="False">
						<AccessText Text="{x:Static prop:Resources.SearchForm_Open}" />
					</Button>
				</Grid>
				<CheckBox Margin="4" Name="isSubDirectoriesBox"
						IsChecked="{Binding Path=SearchCondition.FileSearchOption, Converter={StaticResource SearchOptionToIsAllDirectoriesConverter}, Mode=TwoWay}">
					<AccessText Text="{x:Static prop:Resources.SearchForm_IncludeSubdirectories}" />
				</CheckBox>
			</StackPanel>
		</GroupBox>
		
		<GroupBox>
			<GroupBox.Header>
				<Label Target="{Binding ElementName=fileMaskBox}">
					<AccessText Text="{x:Static prop:Resources.SearchForm_FileMask}" />
				</Label>
			</GroupBox.Header>
			<StackPanel Orientation="Vertical">
				<TextBox Name="fileMaskBox" Text="{Binding Path=SearchCondition.Mask, Mode=TwoWay}" />
			</StackPanel>
		</GroupBox>

		<TabControl>
			<!-- Find -->
			<TabItem x:Name="findTab">
				<TabItem.Header>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Find: " />
						<CheckBox IsChecked="{Binding Path=SearchCondition.IsEnableAdvancedFindCondition}">
							<CheckBox.Style>
								<Style TargetType="{x:Type CheckBox}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=findTab, Path=IsSelected}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=findTab, Path=IsSelected}" Value="false">
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</CheckBox.Style>
							<AccessText Text="_Advanced" />
						</CheckBox>
					</StackPanel>
				</TabItem.Header>
				<StackPanel Orientation="Vertical">
					<StackPanel.Style>
						<Style TargetType="{x:Type StackPanel}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=SearchCondition.IsEnableAdvancedFindCondition}" Value="true">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=SearchCondition.IsEnableAdvancedFindCondition}" Value="false">
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</StackPanel.Style>
					<GroupBox>
						<GroupBox.Header>
							<Label Target="{Binding ElementName=findExcludingMaskBox}">
								<AccessText Text="{x:Static prop:Resources.SearchForm_ExcludingFileMask}" />
							</Label>
						</GroupBox.Header>
						<StackPanel Orientation="Vertical">
							<TextBox Name="findExcludingMaskBox" Text="{Binding Path=SearchCondition.AdvancedfindCondition.ExcludingMask, Mode=TwoWay}" />
						</StackPanel>
					</GroupBox>
					<GroupBox>
						<GroupBox.Header>
							<Label>
								<AccessText Text="{x:Static prop:Resources.SearchForm_FileSizeRange}" />
							</Label>
						</GroupBox.Header>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Label Grid.Column="0">
								<AccessText Text="{x:Static prop:Resources.SearchForm_Min}" />
							</Label>
							<TextBox Grid.Column="1">
								<TextBox.Text>
									<Binding Path="MinFindFileSize" Converter="{StaticResource FileMinSizeConverter}" Mode="TwoWay">
										<Binding.ValidationRules>
											<local:FileSizeConverter />
											<ExceptionValidationRule />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
							<Label Grid.Column="2">
								<AccessText Text="{x:Static prop:Resources.SearchForm_Max}" />
							</Label>
							<TextBox Grid.Column="3">
								<TextBox.Text>
									<Binding Path="MaxFindFileSize" Converter="{StaticResource FileMaxSizeConverter}" Mode="TwoWay">
										<Binding.ValidationRules>
											<local:FileSizeConverter />
											<ExceptionValidationRule />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
						</Grid>
					</GroupBox>
				</StackPanel>
			</TabItem>
					
			<!-- grep -->
			<TabItem x:Name="grepTab">
				<TabItem.Header>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Grep: " />
						<CheckBox IsChecked="{Binding Path=SearchCondition.IsEnableAdvancedGrepCondition}">
							<CheckBox.Style>
								<Style TargetType="{x:Type CheckBox}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=grepTab, Path=IsSelected}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=grepTab, Path=IsSelected}" Value="false">
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</CheckBox.Style>
							<AccessText Text="_Advanced" />
						</CheckBox>
					</StackPanel>
				</TabItem.Header>
				<StackPanel Orientation="Vertical">
					<StackPanel.Style>
						<Style TargetType="{x:Type StackPanel}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=SearchCondition.IsEnableAdvancedGrepCondition}" Value="true">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=SearchCondition.IsEnableAdvancedGrepCondition}" Value="false">
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</StackPanel.Style>
					<GroupBox>
						<GroupBox.Header>
							<Label Target="{Binding ElementName=grepExcludingMaskBox}">
								<AccessText Text="{x:Static prop:Resources.SearchForm_ExcludingFileMask}" />
							</Label>
						</GroupBox.Header>
						<StackPanel Orientation="Vertical">
							<TextBox Name="grepExcludingMaskBox" Text="{Binding Path=SearchCondition.AdvancedGrepCondition.ExcludingMask, Mode=TwoWay}" />
						</StackPanel>
					</GroupBox>
					<GroupBox>
						<GroupBox.Header>
							<Label>
								<AccessText Text="{x:Static prop:Resources.SearchForm_FileSizeRange}" />
							</Label>
						</GroupBox.Header>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Label Grid.Column="0">
								<AccessText Text="{x:Static prop:Resources.SearchForm_Min}" />
							</Label>
							<TextBox Grid.Column="1">
								<TextBox.Text>
									<Binding Path="MinGrepFileSize" Converter="{StaticResource FileMinSizeConverter}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
										<Binding.ValidationRules>
											<local:FileSizeConverter />
											<ExceptionValidationRule />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
							<Label Grid.Column="2">
								<AccessText Text="{x:Static prop:Resources.SearchForm_Max}" />
							</Label>
							<TextBox Grid.Column="3">
								<TextBox.Text>
									<Binding Path="MaxGrepFileSize" Converter="{StaticResource FileMaxSizeConverter}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
										<Binding.ValidationRules>
											<local:FileSizeConverter />
											<ExceptionValidationRule />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
						</Grid>
					</GroupBox>
				</StackPanel>
			</TabItem>
		</TabControl>
		
		<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
			<Button Margin="4" IsDefault="true" Command="cwwin:DialogCommands.OK"  Padding="16,4,16,4">
				<AccessText Text="{x:Static prop:Resources.OK}" />
			</Button>
			<Button Margin="4" IsCancel="true"  Command="cwwin:DialogCommands.Cancel" Padding="16,4,16,4">
				<AccessText Text="{x:Static prop:Resources.Cancel}" />
			</Button>
		</StackPanel>
	</StackPanel>
</Window>
